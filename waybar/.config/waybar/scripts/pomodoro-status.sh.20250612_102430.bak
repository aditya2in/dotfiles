#!/bin/bash

# Define absolute paths for commands
POMODORO_CLI="/home/aditya/.cargo/bin/pomodoro-cli"
JQ_PATH="/usr/bin/jq"

# --- DEBUGGING START ---
# Log the PATH seen by the script when Waybar executes it
echo "DEBUG: PATH = $PATH" > /tmp/waybar_pomo_debug.log 2>&1
# Log any stderr from pomodoro-cli or jq to the same file
exec 2>> /tmp/waybar_pomo_debug.log
# --- DEBUGGING END ---


# Attempt to get pomodoro-cli status in JSON format
# Capture stdout and stderr, and the exit status.
# Using a temporary file for cleaner error handling.
temp_output_file=$(mktemp)
"$POMODORO_CLI" status --format json --time-format digital > "$temp_output_file" 2>&1
pomodoro_cli_exit_status=$?

raw_pomodoro_cli_output=$(cat "$temp_output_file")
rm "$temp_output_file" # Clean up the temporary file

# Write the captured raw output to debug log for inspection
echo "RAW_POMODORO_CLI_OUTPUT:" >> /tmp/waybar_pomo_debug.log
echo "$raw_pomodoro_cli_output" >> /tmp/waybar_pomo_debug.log
echo "POMODORO_CLI_EXIT_STATUS: $pomodoro_cli_exit_status" >> /tmp/waybar_pomo_debug.log


# Check if pomodoro-cli failed (non-zero exit status)
# OR if its output is empty OR if its output is not valid JSON.
# This ensures that we ONLY proceed with valid JSON from pomodoro-cli.
if [ "$pomodoro_cli_exit_status" -ne 0 ] || \
   [ -z "$raw_pomodoro_cli_output" ] || \
   ! echo "$raw_pomodoro_cli_output" | "$JQ_PATH" . > /dev/null 2>&1; then

    # If any of the above conditions are true, pomodoro-cli output is unusable.
    # Output a default "Pomodoro not running" JSON for Waybar.
    # IMPORTANT: Use jq -c . here to ensure compact output for Waybar.
    printf '{"text": "", "tooltip": "Pomodoro not running", "class": "paused", "percentage": 0}\n' | "$JQ_PATH" -c .
    exit 0
fi

# If we reach here, raw_pomodoro_cli_output is valid JSON from a successful pomodoro-cli call.
pomodoro_json="$raw_pomodoro_cli_output"

# Parse the JSON and extract relevant fields
text=$(echo "$pomodoro_json" | "$JQ_PATH" -r '.text // "00:00"')
tooltip_raw=$(echo "$pomodoro_json" | "$JQ_PATH" -r '.tooltip // "No info"')
class=$(echo "$pomodoro_json" | "$JQ_PATH" -r '.class // "paused"')
percentage=$(echo "$pomodoro_json" | "$JQ_PATH" -r '.percentage // 0')

# Customize text and tooltip for Waybar based on class
if [[ "$class" == "running" ]]; then
    text="üçÖ $text"
    class="work" # Change to 'work' class for better styling distinction in Waybar
elif [[ "$class" == "paused" ]]; then
    text="‚è∏Ô∏è $text"
elif [[ "$class" == "break" ]]; then
    text="‚òï $text"
elif [[ "$class" == "long-break" ]]; then
    text="üèñÔ∏è $text"
fi

# Reformat tooltip to handle newlines (printf "%b" interprets backslash escapes like \n)
tooltip=$(printf "%b" "$tooltip_raw")

# Construct the final JSON output for Waybar
# IMPORTANT: Use printf "%s" and pipe through iconv -c for maximum cleanliness
# Add -c to the final jq call to ensure compact output.
printf "%s" "$(
    "$JQ_PATH" -n \
        --arg text "$text" \
        --arg tooltip "$tooltip" \
        --arg class "$class" \
        --argjson percentage "$percentage" \
        '{text: $text, tooltip: $tooltip, class: $class, percentage: $percentage}'
)" | iconv -f UTF-8 -t UTF-8 -c | "$JQ_PATH" -c .
